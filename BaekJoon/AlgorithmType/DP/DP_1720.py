"""
좌우 대칭인 것과 아닌 것들을 전부 구한 DP
좌우 대칭인 것 R

R의 경우 -> 원래 좌우 대칭인 것들
  n-2의 좌우 대칭인 것이므로 거기에 ||를 붙이면 되고
  n-4의 좌우 대칭인 것에서 ㅁㅁ와 ==붙이면 좌우 대칭인 것이 나오므로
  R[n] = R[n-2] + R[n-4] * 2 가 된다

DP의 경우
  n-1에서 | 를 붙인 것과 n-2에서 =와 ㅁ룰 붙이면 되므로
  DP[n] = DP[n-1] + DP[n-2] * 2 가 된다

전체를 구한 DP[n]에서 먼저 좌우 대칭인 것을 빼면 좌우 대칭이 아닌 것들이 나오고
그것들이 뒤집히면 헷갈리는 경우들이다. 그 경우들을 나누기 2하여 한번만 나올 수 있게 할 수 잇고
거기에 이전에 뺀 원래 좌우 대칭인 것들을 더 해주면 된다.
  => (DP[n]-R[n])/2 + R[n]
"""

n = int(input())
dp = [0 for _ in range(n+1)]
r = [0 for _ in range(n+1)]

dp[1:5] = [1, 3, 5, 11]
r[1:5] = [1, 3, 1, 5]

for i in range(5, n+1):
    dp[i] = dp[i-1] + dp[i-2] * 2
    r[i] = r[i-2] + r[i-4] * 2

print((dp[n]-r[n])//2 + r[n])